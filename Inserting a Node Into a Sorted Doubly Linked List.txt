// Complete the sortedInsert function below.

    /*
     * For your reference:
     *
     * DoublyLinkedListNode {
     *     int data;
     *     DoublyLinkedListNode next;
     *     DoublyLinkedListNode prev;
     * }
     *
     */
    static DoublyLinkedListNode sortedInsert(DoublyLinkedListNode head, int data) 
    {
        DoublyLinkedListNode node = new DoublyLinkedListNode(data);
        
        if(head == null)
        {
            return node;
        }
        else if(data <head.data)
        {
            node.next = head;
            head.prev = node;
            return node;
        }
        else
        {
            DoublyLinkedListNode n1 = null;
            DoublyLinkedListNode n2 = head;

           while (n2 != null && n2.data < data) 
           {
                n1 = n2;
                n2 = n2.next;
            }

            if (n2 == null) 
            { // insert at end of list
                n1.next = node;
                node.prev = n1;
            } 
            else
            { // insert somewhere within the list
                n1.next = node;
                n2.prev = node;
                node.prev = n1;
                node.next = n2;
            }
        return head;
        }
    }
